name: Vercel Production Deployment Tests

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test-before-production:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
    
    # Mock MongoDB for tests
    - name: Set up MongoDB (for non-mocked tests)
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: 6.0
        mongodb-replica-set: test-rs
    
    # Run build to verify it builds successfully
    - name: Build application
      run: npm run build
      env:
        MONGODB_URI: mongodb://localhost:27017/habit-quest-test
        JWT_SECRET: production-test-jwt-secret
        NEXT_PUBLIC_API_URL: https://habit-quest.vercel.app/api
    
    # If any of the previous steps fail, create a GitHub issue
    - name: Create issue if test or build fails
      if: failure()
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/PRODUCTION_ISSUE_TEMPLATE.md
        update_existing: true
        search_existing: open

  # Optional: Add a smoke test after deployment
  smoke-test:
    needs: test-before-production
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Wait for Vercel deployment
      run: sleep 60  # Wait for deployment to finish
    
    - name: Check if site is up
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" https://habit-quest.vercel.app/)
        if [[ $response == 200 ]]; then
          echo "Site is up and running!"
        else
          echo "Site is down or not responding correctly"
          exit 1
        fi 