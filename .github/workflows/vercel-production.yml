name: Vercel Production Deployment Tests

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test-before-production:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Set up MongoDB first so it's ready for the tests
    - name: Set up MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: 6.0
        mongodb-replica-set: test-rs
    
    - name: Install dependencies
      run: npm ci
      
    # Check for mismatched/hoisted deps that might cause issues
    - name: Check dependencies
      run: |
        echo "Checking for problematic dependencies..."
        npm ls || true
    
    - name: Run linting
      run: npm run lint
      continue-on-error: true
    
    # Run unit tests and API tests separately from component tests to identify issues
    - name: Run unit and API tests
      run: |
        npx jest --testPathIgnorePatterns="task-list.test.tsx|e2e" --ci
      env:
        MONGODB_URI: mongodb://localhost:27017/habit-quest-test
        JWT_SECRET: production-test-jwt-secret
    
    - name: Run component tests
      run: |
        npx jest "__tests__/components/themed-button.test.tsx" --ci
        npx jest "__tests__/components/task-list.test.tsx" --ci --testTimeout=30000
      env:
        MONGODB_URI: mongodb://localhost:27017/habit-quest-test
        JWT_SECRET: production-test-jwt-secret
    
    # Generate coverage report (may be partial if some tests fail)
    - name: Generate coverage report
      run: npx jest --coverage --ci
      continue-on-error: true
      env:
        MONGODB_URI: mongodb://localhost:27017/habit-quest-test
        JWT_SECRET: production-test-jwt-secret

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
    
    # Run build to verify it builds successfully
    - name: Build application
      run: npm run build
      env:
        MONGODB_URI: mongodb://localhost:27017/habit-quest-test
        JWT_SECRET: production-test-jwt-secret
        NEXT_PUBLIC_API_URL: https://habit-quest.vercel.app/api
        # Add other environment variables your build might need
        NODE_ENV: production
    
    # If any of the previous steps fail, create a GitHub issue
    - name: Create issue if test or build fails
      if: failure()
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/PRODUCTION_ISSUE_TEMPLATE.md
        update_existing: true
        search_existing: open

  # Optional: Add a smoke test after deployment
  smoke-test:
    needs: test-before-production
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Wait for Vercel deployment
      run: |
        echo "Waiting for Vercel deployment to complete..."
        sleep 120  # Wait longer for deployment to finish
    
    - name: Check if site is up
      run: |
        max_retries=5
        retry_count=0
        while [ $retry_count -lt $max_retries ]; do
          response=$(curl -s -o /dev/null -w "%{http_code}" https://habit-quest.vercel.app/)
          if [[ $response == 200 ]]; then
            echo "Site is up and running!"
            exit 0
          else
            echo "Attempt $((retry_count+1))/$max_retries: Site returned status $response, retrying in 30 seconds..."
            sleep 30
            retry_count=$((retry_count+1))
          fi
        done
        echo "Site is down or not responding correctly after $max_retries attempts"
        exit 1 